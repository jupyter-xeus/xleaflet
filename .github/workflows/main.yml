name: CI
on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

defaults:
  run:
    shell: bash -l {0}

jobs:

  unix:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]

    steps:
    - uses: actions/checkout@v4

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
    
    - name: Install micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment-dev.yml

    - name: Make build directory
      run: mkdir build
    

    - name: Configure cmake
      run: |
        cmake .. \
        -D CMAKE_PREFIX_PATH=$CONDA_PREFIX \
        -D CMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -D XLEAFLET_BUILD_TESTS=ON \
        -D CMAKE_INSTALL_LIBDIR=lib \
        -D CMAKE_C_COMPILER=$CC \
        -D CMAKE_CXX_COMPILER=$CXX \
        -D PYTHON_EXECUTABLE=`which python`
      working-directory: build

    - name: Build
      run: make -j ${{ steps.cpu-cores.outputs.count }}
      working-directory: build

    - name: Test xleaflet
      run: ./test_xleaflet
      working-directory: build/test

  win:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
    - uses: actions/checkout@v4

    - name: Install micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        init-shell: cmd.exe
        environment-file: environment-dev.yml

    - name: Make build directory
      run: mkdir build

    - name: Cmake configure
      shell: cmd /C call {0}
      run: |
        cmake .. ^
         -GNinja ^
         -DCMAKE_BUILD_TYPE=Release ^
         -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
         -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%"
      working-directory: build

    - name: Build
      shell: cmd /C call {0}
      run: |
        set CL=/MP
        ninja
      working-directory: build
